# Finds the tag with a plyaer name
def findPlayer(tag):
  return tag.has_attr('name') and tag.has_attr('href') and tag.name == 'a'

# Grabs stats for each type
def findPassingStats(tag):
    passingStat = ['\'c-att\'','yds','avg','td','int','qbr']
    return  'class' in tag.attrs and(tag['class'] == ['name'] or tag['class'] == ['yds'] or
                                     tag['class'] == ['c-att'] or tag['class'] == ['avg'] or
                                     tag['class'] == ['td'] or tag['class'] == ['int'] or
                                      tag['class'] == ['qbr'] )

# Finds all stat categories on page
def statCats(tag):
    return (tag.name == 'div' and tag.has_attr('id') and
            (tag['id'] == ['gamepackage-passing'] or tag['id'] == ['gamepackage-rushing'] or
            tag['id'] == ['gamepackage-receiving'] or tag['id'] == ['gamepackage-interceptions'] or
            tag['id'] == ['gamepackage-kickReturns'] or tag['id'] == ['gamepackage-kicking'] or
            tag['id'] == ['gamepackage-punting']))

def get_roster_links(tag):
	return 'href' in tag.attrs and 'class' in tag.attrs and 'a' in tag.attrs
	
	
	
	#for conference in powerFiveTags.descendants:
#statCatgs = ['gamepackage-passing','gamepackage-rushing','gamepackage-receiving','gamepackage-interceptions','gamepackage-kickReturns','gamepackage-kicking','gamepackage-punting']

#for items in statCatgs:
#    statCategories = soup.find(id=items)
#    for cat in statCategories:
#        for child in cat.children:
#            players = child.find_all(findPlayer)
#            for player in players:
#                stats = player.find_parent('tr')
#                for stat in stats.find_all(findPassingStats):
#                    print stat['class']
#                    print stat.get_text()